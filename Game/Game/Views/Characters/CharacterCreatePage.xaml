<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:local="using:Game.Models"
             xmlns:local_helpers="clr-namespace:Game.Helpers"
             xmlns:local_enum="clr-namespace:Game.Models"
             x:Class="Game.Views.Characters.CharacterCreatePage"
             Title="{Binding Title}">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Cancel" Clicked="Cancel_Clicked" IconImageSource="icon_cancel.png"/>
        <ToolbarItem Text="Save" Clicked="Save_Clicked" IconImageSource="icon_save.png"/>
    </ContentPage.ToolbarItems>

    <ContentPage.Resources>
        <ResourceDictionary>
            <local_helpers:StringEnumConverter x:Key="StringEnum"/>
            <local_helpers:IntStringConverter x:Key="Int_String"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>

        <ScrollView>
            <StackLayout Style="{StaticResource OuterBoxStack}"
                Spacing="10">

                <Label Text="Create your character" Style="{StaticResource HeaderStyle}"/>

                <Image Source="{Binding Data.ImageURI}" Style="{StaticResource ImageLargeStyle}" HorizontalOptions="CenterAndExpand"/>

                <Button
                Text="Pick a character image"
                Style="{StaticResource PrimaryButtonStyle}"
                Clicked="Browse_Clicked"
                />
                
                <Grid
                    RowSpacing="1"
                    ColumnSpacing="2"
                    VerticalOptions="Center">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0"
                        Text="Name" 
                        Style="{StaticResource LabelStyle}"/>

                    <Entry Grid.Row="0" Grid.Column="1"
                        Text="{Binding Data.Name}" 
                        Style="{StaticResource EntryStyle}"/>

                    <Label Grid.Row="1" Grid.Column="0"
                        Text="Description" 
                        Style="{StaticResource LabelStyle}"/>

                    <Entry Grid.Row="1" Grid.Column="1"
                        Text="{Binding Data.Description}" 
                        Style="{StaticResource EntryStyle}"/>

                    <Label Grid.Row="2" Grid.Column="0"
                        Text="Special ability" 
                        Style="{StaticResource LabelStyle}"/>

                    <Picker Grid.Row="2" Grid.Column="1"
                        ItemsSource="{x:Static local_helpers:SpecialAbilityEnumHelper.GetSpecialAbilityList}" 
                        SelectedItem="{Binding Data.SpecialAbility, Converter={StaticResource StringEnum}, Mode=TwoWay}" 
                        x:Name="SpecialAbilityPicker"/>

                    
                    <Label Grid.Row="3" Grid.Column="0"
                        Text="Attack" 
                        Style="{StaticResource LabelStyle}"/>

                    <Picker Grid.Row="3" Grid.Column="1" 
                        SelectedItem="{Binding Data.Attack, Converter={StaticResource Int_String}, Mode=TwoWay}" 
                        x:Name="AttackPicker">
                        <Picker.Items>
                            <x:String>0</x:String>
                            <x:String>5</x:String>
                            <x:String>10</x:String>
                            <x:String>20</x:String>
                            <x:String>25</x:String>
                        </Picker.Items>
                    </Picker>

                    <Label Grid.Row="4" Grid.Column="0"
                        Text="Defense" 
                        Style="{StaticResource LabelStyle}"/>

                    <Picker Grid.Row="4" Grid.Column="1" 
                        SelectedItem="{Binding Data.Defense, Converter={StaticResource Int_String}, Mode=TwoWay}" 
                        x:Name="DefensePicker">
                        <Picker.Items>
                            <x:String>0</x:String>
                            <x:String>5</x:String>
                            <x:String>10</x:String>
                            <x:String>20</x:String>
                            <x:String>25</x:String>
                        </Picker.Items>
                    </Picker>

                    <Label Grid.Row="5" Grid.Column="0"
                        Text="Health" 
                        Style="{StaticResource LabelStyle}"/>

                    <Picker Grid.Row="5" Grid.Column="1" 
                        SelectedItem="{Binding Data.CurrentHealth, Converter={StaticResource Int_String}, Mode=TwoWay}" 
                        x:Name="HealthPicker">
                        <Picker.Items>
                            <x:String>0</x:String>
                            <x:String>5</x:String>
                            <x:String>10</x:String>
                            <x:String>20</x:String>
                            <x:String>25</x:String>
                            <x:String>30</x:String>
                        </Picker.Items>
                    </Picker>
                    
                </Grid>

                <StackLayout Style="{StaticResource VerticalStack}" HorizontalOptions="FillAndExpand">

                    
                    <Label 
                            Text="Level" 
                            Style="{StaticResource LabelStyle}"/>

                    <StackLayout Style="{StaticResource HorizontalStack}" Padding="10,0,10,0">

                        <Label 
                            Text="{Binding Data.Level}" 
                            x:Name="LevelValue"
                            Style="{StaticResource ValueStyle}"
                            Padding="0,0,10,0"
                            HorizontalOptions="End"
                            HorizontalTextAlignment="End"/>

                        <Stepper 
                            Value="{Binding Data.Level, Mode=TwoWay}"
                            ValueChanged="Level_OnStepperValueChanged"
                            Minimum="1"
                            Maximum="20"
                            Increment="1"/>

                    </StackLayout>

                    <!--
                    <Label 
                        Text="Attack"
                        Style="{StaticResource LabelStyle}"/>

                    <StackLayout Style="{StaticResource HorizontalStack}" Padding="10,0,10,0">

                        <Label 
                            Text="{Binding Data.Attack}" 
                            x:Name="AttackValue"
                            Style="{StaticResource ValueStyle}"
                            Padding="0,0,10,0"
                            HorizontalOptions="End"
                            HorizontalTextAlignment="End"/>

                        <Stepper 
                            Value="{Binding Data.Attack, Mode=TwoWay}"
                            ValueChanged="Attack_OnStepperValueChanged"/>

                    </StackLayout>

                    <Label 
                        Text="Defense"
                        Style="{StaticResource LabelStyle}"/>

                    <StackLayout Style="{StaticResource HorizontalStack}" Padding="10,0,10,0">

                        <Label 
                            Text="{Binding Data.Defense}" 
                            x:Name="DefenseValue"
                            Style="{StaticResource ValueStyle}"
                            Padding="0,0,10,0"
                            HorizontalOptions="End"
                            HorizontalTextAlignment="End"/>

                        <Stepper 
                            Value="{Binding Data.Defense, Mode=TwoWay}"
                            ValueChanged="Defense_OnStepperValueChanged"/>

                    </StackLayout>

                    <Label 
                        Text="Health"
                        Style="{StaticResource LabelStyle}"/>

                    <StackLayout Style="{StaticResource HorizontalStack}" Padding="10,0,10,0">

                        <Label 
                            Text="{Binding Data.Health}" 
                            x:Name="HealthValue"
                            Style="{StaticResource ValueStyle}"
                            Padding="0,0,10,0"
                            HorizontalOptions="End"
                            HorizontalTextAlignment="End"/>

                        <Stepper 
                            Value="{Binding Data.Health, Mode=TwoWay}"
                            ValueChanged="Health_OnStepperValueChanged"/>

                    </StackLayout>

                    -->
                </StackLayout>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>